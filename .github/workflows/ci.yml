name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "17 3 * * *"

env:
  CARGO_TERM_COLOR: always
  INLINE_IGNORE_PATTERN: "drop_in_place|::fmt::"

jobs:
  expect:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          [
            "1.38.0",
            "1.42.0",
            "1.43.0",
            "1.80.0",
            "1.81.0",
            "stable",
            "beta",
            "nightly",
          ]
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: cargo check --all-targets
        shell: bash
        run: |
          output=$(cargo check --all-targets 2>&1)
          echo "$output" > check_output.txt
          if ! diff -u tests/check-expect-supported.out check_output.txt; then
            echo "Cargo check output does not match expected output"
            exit 1
          fi
      - name: cargo clean
        run: cargo clean
      - name: cargo test
        run: cargo test --all-targets
      - name: cargo clean
        run: cargo clean
      - name: cargo clippy
        shell: bash
        run: |
          output=$(cargo clippy --all-targets 2>&1)
          echo "$output" > clippy_output.txt
          if ! diff -u tests/clippy-expect-supported.out clippy_output.txt; then
            echo "Cargo clippy output does not match expected output"
            exit 1
          fi
      - name: Run cargo check comparison
        run: ./tests/compare-output.sh "check" "tests/check-expect-supported.out"
      - name: cargo clean
        run: cargo clean
      - name: cargo test
        run: cargo test --all-targets
      - name: cargo clean
        run: cargo clean
      - name: Run cargo clippy comparison
        run: ./tests/compare-output.sh "clippy" "tests/clippy-expect-supported.out"
  allow:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: ["1.43.0", "1.80.0"]
    env:
      RUSTFLAGS: "-D warnings"
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: cargo check
        run: cargo check --all-targets
      - name: cargo clean
        run: cargo clean
      - name: cargo test
        run: cargo test --all-targets
      - name: cargo clean
        run: cargo clean
      - name: cargo clippy
        run: cargo clippy --all-targets
